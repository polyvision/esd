#############################################################################
# Makefile for building: esd
# Generated by qmake (2.01a) (Qt 4.8.1) on: Fri Mar 1 10:03:23 2013
# Project:  esd.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile esd.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4 -I.
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lbass -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = src/main.cpp \
		src/sound_engine.cpp \
		src/app_settings.cpp \
		src/qlogger.cpp \
		src/psd_server.cpp \
		src/station_server.cpp \
		src/station_client.cpp \
		src/ecycler.cpp moc_sound_engine.cpp \
		moc_qlogger.cpp \
		moc_psd_server.cpp \
		moc_station_server.cpp \
		moc_station_client.cpp \
		moc_ecycler.cpp
OBJECTS       = main.o \
		sound_engine.o \
		app_settings.o \
		qlogger.o \
		psd_server.o \
		station_server.o \
		station_client.o \
		ecycler.o \
		moc_sound_engine.o \
		moc_qlogger.o \
		moc_psd_server.o \
		moc_station_server.o \
		moc_station_client.o \
		moc_ecycler.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		esd.pro
QMAKE_TARGET  = esd
DESTDIR       = 
TARGET        = esd

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: esd.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtNetwork.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile esd.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtNetwork.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile esd.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/esd1.0.0 || $(MKDIR) .tmp/esd1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/esd1.0.0/ && $(COPY_FILE) --parents inc/bass.h inc/sound_engine.h inc/app_settings.h inc/qlogger.h inc/psd_server.h inc/station_server.h inc/station_client.h inc/ecycler.h .tmp/esd1.0.0/ && $(COPY_FILE) --parents src/main.cpp src/sound_engine.cpp src/app_settings.cpp src/qlogger.cpp src/psd_server.cpp src/station_server.cpp src/station_client.cpp src/ecycler.cpp .tmp/esd1.0.0/ && (cd `dirname .tmp/esd1.0.0` && $(TAR) esd1.0.0.tar esd1.0.0 && $(COMPRESS) esd1.0.0.tar) && $(MOVE) `dirname .tmp/esd1.0.0`/esd1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/esd1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_sound_engine.cpp moc_qlogger.cpp moc_psd_server.cpp moc_station_server.cpp moc_station_client.cpp moc_ecycler.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_sound_engine.cpp moc_qlogger.cpp moc_psd_server.cpp moc_station_server.cpp moc_station_client.cpp moc_ecycler.cpp
moc_sound_engine.cpp: inc/bass.h \
		inc/singleton.h \
		inc/sound_engine.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) inc/sound_engine.h -o moc_sound_engine.cpp

moc_qlogger.cpp: inc/singleton.h \
		inc/qlogger.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) inc/qlogger.h -o moc_qlogger.cpp

moc_psd_server.cpp: inc/singleton.h \
		inc/psd_server.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) inc/psd_server.h -o moc_psd_server.cpp

moc_station_server.cpp: inc/singleton.h \
		inc/station_server.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) inc/station_server.h -o moc_station_server.cpp

moc_station_client.cpp: inc/station_client.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) inc/station_client.h -o moc_station_client.cpp

moc_ecycler.cpp: inc/ecycler.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) inc/ecycler.h -o moc_ecycler.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: src/main.cpp inc/sound_engine.h \
		inc/bass.h \
		inc/singleton.h \
		inc/app_settings.h \
		inc/psd_server.h \
		inc/station_server.h \
		inc/qlogger.h \
		inc/ecycler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o src/main.cpp

sound_engine.o: src/sound_engine.cpp inc/sound_engine.h \
		inc/bass.h \
		inc/singleton.h \
		inc/app_settings.h \
		inc/qlogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sound_engine.o src/sound_engine.cpp

app_settings.o: src/app_settings.cpp inc/app_settings.h \
		inc/sound_engine.h \
		inc/bass.h \
		inc/singleton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o app_settings.o src/app_settings.cpp

qlogger.o: src/qlogger.cpp inc/qlogger.h \
		inc/singleton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qlogger.o src/qlogger.cpp

psd_server.o: src/psd_server.cpp inc/psd_server.h \
		inc/singleton.h \
		inc/qlogger.h \
		inc/sound_engine.h \
		inc/bass.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o psd_server.o src/psd_server.cpp

station_server.o: src/station_server.cpp inc/station_server.h \
		inc/singleton.h \
		inc/qlogger.h \
		inc/app_settings.h \
		inc/station_client.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o station_server.o src/station_server.cpp

station_client.o: src/station_client.cpp inc/station_client.h \
		inc/qlogger.h \
		inc/singleton.h \
		inc/app_settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o station_client.o src/station_client.cpp

ecycler.o: src/ecycler.cpp inc/ecycler.h \
		inc/qlogger.h \
		inc/singleton.h \
		inc/app_settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ecycler.o src/ecycler.cpp

moc_sound_engine.o: moc_sound_engine.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sound_engine.o moc_sound_engine.cpp

moc_qlogger.o: moc_qlogger.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_qlogger.o moc_qlogger.cpp

moc_psd_server.o: moc_psd_server.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_psd_server.o moc_psd_server.cpp

moc_station_server.o: moc_station_server.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_station_server.o moc_station_server.cpp

moc_station_client.o: moc_station_client.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_station_client.o moc_station_client.cpp

moc_ecycler.o: moc_ecycler.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ecycler.o moc_ecycler.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

